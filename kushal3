class Solution:
    def distinctSubsequences(self, s):
        n = len(s)
        dp = [0] * (n + 1)
        dp[0] = 1
        last_occurrence = [-1] * 256 

        for i in range(1, n + 1):
            char = s[i - 1]
            dp[i] = dp[i - 1] * 2 % 1000000007

            if last_occurrence[ord(char)] != -1:
                idx = last_occurrence[ord(char)]
                dp[i] -= dp[idx - 1] % 1000000007
            
            last_occurrence[ord(char)] = i
        
        return dp[n] % 1000000007


//PYTHON 
//POTD SOLUTION(GFG)
//2 Oct 2023
